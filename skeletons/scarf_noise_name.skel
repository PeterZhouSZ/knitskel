[{"id":0,"name":"sheet","category":"sheet","pattern":[{"type":-1,"data":"let mask = pat.filter(n => noise.simplex2(n.waleId / 20, n.courseId / 20) < 0);\nmask.tiledo([\n  'kkkk',\n  'kllk',\n  'kkkk',\n  'krrk'\n])\n\nlet bounds = mask.neighbors();\nmask.neighbors(1:2).knit()\nmask.neighbors(3:4).purl()\n\npat.courses(0:1).knit()\npat.courses(-1).knit()\npat.courses(-2).knit()","name":""},{"type":-1,"data":"let yrange = [0.45, 0.65];\nlet mod = (rng, scale, off) => rng.map(x => (x-0.5) * scale + 0.5 + (off || 0));\n\npat.select(mod(yrange, 1.5, -0.015), 0.1:0.9, 0).knit();\n\nlet text = pat.select(mod(yrange, 1.8), 0.1:0.9, 0).text('devin', '100px roboto');\ntext.knit();\ntext.neighbors(1:3).knit();\n\n// outline\nlet out1 = text.neighbors();\nlet out2 = text.inverse().neighbors();\nlet outline = out1.or(out2);\n\n// margin for knittability\noutline.purl();\n    \n","name":""}],"gauge":"half","type":"cylinder","length":250,"width":170,"shaper":"uniform","alignment":"center","anchors":[],"top":4,"bottom":3},{"id":3,"name":"itf","category":"interface","pattern":[{"type":-1,"data":"","name":""}],"caston":"auto","castoff":"auto","sides":[{"node":0,"path":"bottom"},null],"rotation":0,"state":"open","start":true},{"id":4,"name":"itf","category":"interface","pattern":[{"type":-1,"data":"","name":""}],"caston":"auto","castoff":"auto","sides":[{"node":0,"path":"top"},null],"rotation":0,"state":"open"}]